- История
- Стиль программирования
- http://www.haskell.org/haskellwiki/The_JavaScript_Problem
Это невозможно, ведь хаскель - это язык без проблем, программ и программистов. А проблемы могут возникнуть только с тем что реально.
- функции - объекты первого порядка - var a = function(){}
- почему js функциональный
- coffeescript - всегда return
- лексическая область видимости  Функциям в ECMAScript присуща лексическая область видимости. Это означает, что область видимости определяется в момент определения функции (в отличие от динамической области видимости, при которой область видимости определяется в момент вызова функции).
- замыкания: в замыкание попадает именно переменная, а не ее значение
- ФВП: forEach, map, не параллелится
- async, await
- Array.prototype
- Каррирование
- Деструктуризация
- yield, перечислимость
- pipes, livescript
- Ленивые вычисления
- Монады: списки, деревья, ajax, зачем? - promise
- Сопоставление с образцом - пример на livescript